/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package event.management.system;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author cash
 */
public class attendeeRegistration_interface extends javax.swing.JFrame {

    /**
     * Creates new form attendeeRegistration_interface
     */
    public attendeeRegistration_interface() {
        initComponents();
        initializeTableModel();
    }
    
    private void initializeTableModel() {
        // Define column names for the table model
        String[] columnNames = {"Name", "Email", "Contact Number", "Event Selection"};
        
        // Initialize tableModel with column names and 0 rows initially
        tableModel = new DefaultTableModel(columnNames, 0);
        
        // Set the table model to your JTable instance
        attendee_table.setModel(tableModel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        attendeeContact_txtField = new javax.swing.JTextField();
        attendeeEmail_txtField = new javax.swing.JTextField();
        attendeeName_txtField = new javax.swing.JTextField();
        attendeeEvent_txtField = new javax.swing.JTextField();
        attendee_addBtn = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        attendee_table = new javax.swing.JTable();
        back_btn = new javax.swing.JButton();
        attendee_viewbtn = new javax.swing.JButton();
        attendee_editBtn = new javax.swing.JButton();
        attendee_deleteBtn = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Rockwell Nova Extra Bold", 1, 14)); // NOI18N
        jLabel1.setText("Attendee Registration");

        jLabel2.setFont(new java.awt.Font("Rockwell Nova Extra Bold", 1, 14)); // NOI18N
        jLabel2.setText("Name");

        jLabel3.setFont(new java.awt.Font("Rockwell Nova Extra Bold", 1, 14)); // NOI18N
        jLabel3.setText("Email");

        jLabel4.setFont(new java.awt.Font("Rockwell Nova Extra Bold", 1, 14)); // NOI18N
        jLabel4.setText("Contact Number");

        jLabel5.setFont(new java.awt.Font("Rockwell Nova Extra Bold", 1, 14)); // NOI18N
        jLabel5.setText("Event Selection");

        attendeeContact_txtField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        attendeeEmail_txtField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        attendeeName_txtField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        attendeeEvent_txtField.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        attendee_addBtn.setText("Add");
        attendee_addBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        attendee_addBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendee_addBtnActionPerformed(evt);
            }
        });

        attendee_table.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        attendee_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(attendee_table);

        back_btn.setText("Back");
        back_btn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        back_btn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                back_btnActionPerformed(evt);
            }
        });

        attendee_viewbtn.setText("View");
        attendee_viewbtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        attendee_viewbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendee_viewbtnActionPerformed(evt);
            }
        });

        attendee_editBtn.setText("Edit");
        attendee_editBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        attendee_editBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendee_editBtnActionPerformed(evt);
            }
        });

        attendee_deleteBtn.setText("Delete");
        attendee_deleteBtn.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        attendee_deleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attendee_deleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(59, 59, 59)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 642, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel2))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(attendeeName_txtField, javax.swing.GroupLayout.DEFAULT_SIZE, 420, Short.MAX_VALUE)
                                    .addComponent(attendeeEmail_txtField)
                                    .addComponent(attendeeContact_txtField)
                                    .addComponent(attendeeEvent_txtField))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(attendee_addBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(attendee_editBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(attendee_deleteBtn, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(attendee_viewbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(56, 56, 56))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(56, 56, 56)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(attendeeName_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(attendeeEmail_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attendee_addBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(attendeeContact_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attendee_editBtn))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(attendeeEvent_txtField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(attendee_deleteBtn))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(attendee_viewbtn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(back_btn, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(58, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void back_btnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_back_btnActionPerformed
        // TODO add your handling code here:
        dispose();
        
        start_interface start = new start_interface();
        start.setVisible(true);
        
    }//GEN-LAST:event_back_btnActionPerformed

    private void attendee_addBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendee_addBtnActionPerformed
        // TODO add your handling code here:
        
        String a_name = attendeeName_txtField.getText();
        String a_email = attendeeEmail_txtField.getText();
        String a_contact = attendeeContact_txtField.getText();
        String a_event_selection = attendeeEvent_txtField.getText();

        Connection connection = Database_Connection.getConnection();
        try {
            // Insert into passenger_details table
            String insertQuery = "INSERT INTO attendee_registraion (a_name, a_email, a_contactNumber, a_event_selection) VALUES (?, ?, ?, ?)";
            PreparedStatement insertStatement = connection.prepareStatement(insertQuery);
            insertStatement.setString(1, a_name);
            insertStatement.setString(2, a_email);
            insertStatement.setString(3, a_contact);
            insertStatement.setString(4, a_event_selection);
            insertStatement.executeUpdate();
            
            //the next four lines of code will clear the textfields after inserting the information
            attendeeName_txtField.setText("");
            attendeeEmail_txtField.setText("");
            attendeeContact_txtField.setText("");
            attendeeEvent_txtField.setText("");

            JOptionPane.showMessageDialog(this, "Attendee registered successfully!");
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_attendee_addBtnActionPerformed

    private void attendee_viewbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendee_viewbtnActionPerformed
        // TODO add your handling code here:
        Connection connection = Database_Connection.getConnection();
        // Clear the table model
        tableModel.setRowCount(0);
        try {
            Statement stmt = connection.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM attendee_registraion ");

            // show the table with data from the result set
            while (rs.next()) {
                String a_name = rs.getString("a_name");
                String a_email = rs.getString("a_email");
                String a_contact = rs.getString("a_contactNumber");
                String a_event_selection = rs.getString("a_event_selection");
                tableModel.addRow(new Object[]{a_name, a_email, a_contact, a_event_selection});
            }
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_attendee_viewbtnActionPerformed

    private void attendee_editBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendee_editBtnActionPerformed
        // TODO add your handling code here:
        String a_name = attendeeName_txtField.getText();
        String a_email = attendeeEmail_txtField.getText();
        String a_contact = attendeeContact_txtField.getText();
        String a_event_selection = attendeeEvent_txtField.getText();
        String currentName = JOptionPane.showInputDialog(null, "Enter the name of the attendee you want to update");
        
        String sql = "UPDATE attendee_registraion SET a_name = ?, a_email = ?, a_contactNumber = ?, a_event_selection = ? WHERE a_name = ?";

        try (Connection conn = Database_Connection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setString(1, a_name);
            stmt.setString(2, a_email);
            stmt.setString(3, a_contact);
            stmt.setString(4, a_event_selection);
            stmt.setString(5, currentName);

            int rowsAffected = stmt.executeUpdate();

            if (rowsAffected > 0) {
                System.out.println("Attendee details updated successfully!");
            } else {
                System.out.println("No attendee found with the given name.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_attendee_editBtnActionPerformed

    private void attendee_deleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attendee_deleteBtnActionPerformed
        // TODO add your handling code here:
        String a_name = attendeeName_txtField.getText();
        String sql = "DELETE FROM attendee_registraion WHERE a_name = ?";

        try (Connection conn = Database_Connection.getConnection();
             PreparedStatement stmt = conn.prepareStatement(sql)) {

            stmt.setString(1, a_name);
            int rowsAffected = stmt.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null,"Attendee deleted successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "No attendee found with the given name.");
            }

        } catch (SQLException e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_attendee_deleteBtnActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(attendeeRegistration_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(attendeeRegistration_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(attendeeRegistration_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(attendeeRegistration_interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new attendeeRegistration_interface().setVisible(true);
            }
        });
    }

    private DefaultTableModel tableModel;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField attendeeContact_txtField;
    private javax.swing.JTextField attendeeEmail_txtField;
    private javax.swing.JTextField attendeeEvent_txtField;
    private javax.swing.JTextField attendeeName_txtField;
    private javax.swing.JButton attendee_addBtn;
    private javax.swing.JButton attendee_deleteBtn;
    private javax.swing.JButton attendee_editBtn;
    private javax.swing.JTable attendee_table;
    private javax.swing.JButton attendee_viewbtn;
    private javax.swing.JButton back_btn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
